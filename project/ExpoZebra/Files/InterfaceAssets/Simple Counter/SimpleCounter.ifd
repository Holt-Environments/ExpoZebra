{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "counter_js:v1",
  "name": "Simple Counter",
  "if.category": "Value Operators",
  "version": "v3.1",
  "title": "Simple Counter",
  "protocol": "js",
  "if.jsEngine": 2,
  "basePath": "SimpleCounter",
  "if.dependencies": [
    "EventEmitter.js",
    "SimpleCounter.js"
  ],
  "icons": {
    "x32": "icon_counter_32.png"
  },
  "schemas": {
    "SimpleCounter": {
      "id": "SimpleCounter",
      "type": "object",
      "description": "Simple Counter to add/substract values",
      "properties": {
        "InitialValue": {
          "type": "integer",
          "title": "Initial value",
          "description": "The number from which counting should start",
          "default": "0"
        },
        "Count": {
          "type": "integer",
          "description": "The current counting value",
          "readonly": true,
          "default": "0"
        },
        "CoerceValue": {
          "type": "boolean",
          "title": "Limit count to min and max values",
          "description": "Force value to be between min and max",
          "default": false
        },
        "MinValue": {
          "type": "integer",
          "title": "Minimum value",
          "description": "The number from which counting should start",
          "default": "0"
        },
        "MaxValue": {
          "type": "integer",
          "title": "Maximum value",
          "description": "The number from which counting should start",
          "default": "100"
        }
      }
    }
  },
  "resources": {
    "SimpleCounter": {
      "id": "SimpleCounter",
      "if.interfaceAsset": "true",
      "title": "Simple Counter",
      "description": "Tracks count as you add and substract values",
      "if.templateDesignAccelerator": "Simple Counter.dax",
      "methods": {
        "AddOne": {
          "id": "SimpleCounter.AddOne",
          "path": "AddOne",
          "title": "Add One",
          "description": "Add 1 to the counter",
          "response": {
            "type": "none"
          }
        },
        "SubstractOne": {
          "id": "SimpleCounter.SubtractOne",
          "path": "SubstractOne",
          "title": "Subtract One",
          "description": "Subtract 1 from the counter",
          "response": {
            "type": "none"
          }
        },
        "Add": {
          "id": "SimpleCounter.Add",
          "path": "Add",
          "description": "Add a specified value to the counter",
          "parameters": {
            "value": {
              "type": "integer",
              "format": "int64",
              "description": "Value to add",
              "default": "1"
            }
          },
          "response": {
            "type": "none"
          }
        },
        "Substract": {
          "id": "SimpleCounter.Subtract",
          "path": "Substract",
          "title": "Subtract",
          "description": "Subtract a specified value from the counter",
          "parameters": {
            "value": {
              "type": "integer",
              "format": "int64",
              "description": "Value to Substract",
              "default": "1"
            }
          },
          "response": {
            "type": "none"
          }
        },
        "SetNewCountValue": {
          "id": "SimpleCounter.SetNewCountValue",
          "path": "SetNewCountValue",
          "title": "Set Value",
          "description": "Sets a specific value",
          "parameters": {
            "value": {
              "type": "integer",
              "format": "int64",
              "description": "Value to set",
              "default": "0"
            }
          },
          "response": {
            "type": "none"
          }
        },
        "Reset": {
          "id": "SimpleCounter.Reset",
          "path": "Reset",
          "description": "Reset the counter",
          "response": {
            "type": "none"
          }
        }
      },
      "events": {
        "CountChanged": {
          "id": "CountChanged",
          "title": "Count changes",
          "properties": {
            "Count": {
              "description": "The new count value",
              "type": "integer"
            }
          }
        }
      }
    }
  },
  "signature": {
    "hash": "m5To93y9HfqIjBrqtfFYaPWWHpnW4i1q0U8bDBitoxk=",
    "signatureData": {
      "editionLevel": "FREE",
      "hostname": "SAPIN3",
      "isTrial": false,
      "v": 2,
      "data": "eFudoWuHruMDue2RzIUxt/9Lg6YScQ4J/RDjercqXTcgjNV8kiRk9ohNDrD59lmvuzjJNs3rsMSSdz8fvhFQZSpo7lJrsthEj9wX7aA6bKWiLoVMI3XwFUI5JRjKNMYUXjdtx+SzePzhUOZ4E0uhSkSLVhPwevZfpZY9O05kAX7O4PJVnSwpIjQ2WLkF1U/LksRtITIeJMRPwLvfbbiNj1/V9w+Rsu0TDnJjJvsf2RZsg49hiYpRyC+eE0Rd//4h+kOm0vqLVHxMPQs43MO1b5GhQ+49LTeyKy5aoDG1vbve9V6dEUq16+fQr1NNMjFuNVQna1KeVMpT/5GACkc+rXABQuYUTFf37l4dNQ6nPCxDIMY9p8EM4thYmp+SywiawhoP2bfAGq+05i/ar2J96Gt7T/ZCipCAnuomJZnCB0lm5TC4dT7Bq/mXXNvZ3/EXDzvUdg5L2mWKRTZHN4WPaudIdgcFv8AFdlxel51XICair+4kP9nyVqMDa5LYhKVH2CwxX8rdwo/GpiEBA0KSryr+hescEu27pm8K5dGS9QPu7O1NtybZhPMzN1uiUOpbvOoY1iitJ1v8YxyP9Gn7BKCaMrrbSqUpEc3yUXdOAJ4T2hxMVH1jXuRQqFRhwO0ROlb3eHPThvwynHzgYm6DN/2eBkcLkaI1ADM4YRIDJkHOLS74iBoq7yvuGCvOWT0LJt3pur7zVLkw7e2Ap7/aQY7GqpEWm1VBqbcD75vg8lrONOZBhf5Gpx0T+RF+yRhs+A+F1814pBeYf1kwHhlM78XS0U77o2kW8TFzf6bw2L2zVHHWo+O2O7Ae+WmK0YM0lpsZsisfeQ4nHTWI6Aw8XtMeVwKh8S7tpjqVIHCrp3hcnqaSQeoBSy+/+gc0u+LFQ909w/mZyXj1kstbQ00H+RUc0AH6NipQl//uL7Oqx3+YA96/ohyh+sik5lmk+M4VAI36H5f3U2Xpm8WZ+lP52x9u7HKo7EnrTNxdn8HZLSJMHscXcpzNAk/2FxGDlQBGchmIMOKdhRBd16FcxIE99FYsyH6FI6FzFOZkhayN4CgLYRJYJuW8aUu8qnI2+P9K",
      "key": "Eb4VJUtvCv/dzDfp2iibxdOWCr6zZf0EUviw527Tdd/QUllK2WLE7OdBIKIF47StvYjufCleIp86XPAes2eJDBT+CNQaPSD7xpjm/HdVSR+iQMV/6PA5jiqZAaTzUap8qlU/VCmiqUEFUv6dkglrUDArHRo5uuXQ37Yn/NCTKYpHtVWEkJXsGf91R5BD9sWY5X9dencH8RiBRi/zZzWtn+JTv3Wzav6DiPu2++qANaRNkB3mddi4cQCWQMqZ9Z2c5VVweBo5z2sqa+hHz7lK3y18SIM/43yVgscGsLnMRxWczEfLAVzA4IfC/X6oBvhgGhN6eW5xXbU9AbsvdvCQww==",
      "iv": "FVrbU4rRzjwAVnxkd2FRofFq+6xNpQmCnenXNl7HisizA0cXdquk6tVJIp/LZGYMu1AsphYfDus9wtYy0T56hx+nOAmBVU3grpjBkjancvEJOBDNQAVhPQyVeqgH44zihUVE8fMrzDNmmEYc5leG/fJCcivpUD62iNxhJG9fYap1lYg/I0LvcCUFHrKFkZHtOiYKLZLoay6JN3uWzC9hXYOUwylBwNCeUSjL7o94TJiVjm7VzQcR1lbJoI2gjSBZq3n2agw+U/fEPTVwLUHh8rgGoRPv++NxvKGcIL2xdV/wQnGGZhm1xRqKKFCpVtSD8KoDtLI3D71Ti0yYVdMSrg=="
    }
  }
}